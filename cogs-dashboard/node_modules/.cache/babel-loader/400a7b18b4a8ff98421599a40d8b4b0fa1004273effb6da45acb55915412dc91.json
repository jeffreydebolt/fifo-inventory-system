{"ast":null,"code":"import { SDK_VERSION } from '../version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name) {\n  let names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [name];\n  let source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'npm';\n  const metadata = options._metadata || {};\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION\n      })),\n      version: SDK_VERSION\n    };\n  }\n  options._metadata = metadata;\n}\nexport { applySdkMetadata };","map":{"version":3,"names":["applySdkMetadata","options","name","names","arguments","length","undefined","source","metadata","_metadata","sdk","packages","map","version","SDK_VERSION"],"sources":["/Users/jeffreydebolt/Documents/fifo/cogs-dashboard/node_modules/@sentry/src/utils/sdkMetadata.ts"],"sourcesContent":["import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,gBAAgBA,CAACC,OAAO,EAAWC,IAAI,EAAgD;EAAA,IAAtCC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ,CAACF,IAAI,CAAC;EAAA,IAAEK,MAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAS,KAAK;EAC7F,MAAMI,QAAA,GAAWP,OAAO,CAACQ,SAAU,IAAG,EAAE;EAExC,IAAI,CAACD,QAAQ,CAACE,GAAG,EAAE;IACjBF,QAAQ,CAACE,GAAA,GAAM;MACbR,IAAI,EAAE,qBAAqBA,IAAI,EAAC;MACAS,QAAA,EAAAR,KAAA,CAAAS,GAAA,CAAAV,IAAA;QACAA,IAAA,KAAAK,MAAA,YAAAL,IAAA;QACAW,OAAA,EAAAC;MACA;MACAD,OAAA,EAAAC;IACA;EACA;EAEAb,OAAA,CAAAQ,SAAA,GAAAD,QAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}