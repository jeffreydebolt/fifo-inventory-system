{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8000';// Create axios instance\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},timeout:30000// 30 seconds\n});// Request interceptor to add auth headers if needed\napi.interceptors.request.use(config=>{// Could add auth tokens here if needed\nreturn config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{if(error.response){// Server responded with error status\nconst{status,data}=error.response;switch(status){case 409:throw new Error(data.detail||'A run is already in progress for this tenant');case 404:throw new Error(data.detail||'Resource not found');case 400:throw new Error(data.detail||'Invalid request');case 500:throw new Error('Server error. Please try again later.');default:throw new Error(data.detail||`Request failed with status ${status}`);}}else if(error.request){throw new Error('Network error. Please check your connection.');}else{throw new Error('Request failed. Please try again.');}});export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","error","Promise","reject","response","status","data","Error","detail"],"sources":["/Users/jeffreydebolt/Documents/fifo/cogs-dashboard/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 30000, // 30 seconds\n});\n\n// Request interceptor to add auth headers if needed\napi.interceptors.request.use(\n  (config) => {\n    // Could add auth tokens here if needed\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // Server responded with error status\n      const { status, data } = error.response;\n      \n      switch (status) {\n        case 409:\n          throw new Error(data.detail || 'A run is already in progress for this tenant');\n        case 404:\n          throw new Error(data.detail || 'Resource not found');\n        case 400:\n          throw new Error(data.detail || 'Invalid request');\n        case 500:\n          throw new Error('Server error. Please try again later.');\n        default:\n          throw new Error(data.detail || `Request failed with status ${status}`);\n      }\n    } else if (error.request) {\n      throw new Error('Network error. Please check your connection.');\n    } else {\n      throw new Error('Request failed. Please try again.');\n    }\n  }\n);\n\nexport default api;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,uBAAuB,CAElF;AACA,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,OAAO,CAAE,KAAO;AAClB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV;AACA,MAAO,CAAAA,MAAM,CACf,CAAC,CACAC,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAT,GAAG,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,CACT,GAAIA,KAAK,CAACG,QAAQ,CAAE,CAClB;AACA,KAAM,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAGL,KAAK,CAACG,QAAQ,CAEvC,OAAQC,MAAM,EACZ,IAAK,IAAG,CACN,KAAM,IAAI,CAAAE,KAAK,CAACD,IAAI,CAACE,MAAM,EAAI,8CAA8C,CAAC,CAChF,IAAK,IAAG,CACN,KAAM,IAAI,CAAAD,KAAK,CAACD,IAAI,CAACE,MAAM,EAAI,oBAAoB,CAAC,CACtD,IAAK,IAAG,CACN,KAAM,IAAI,CAAAD,KAAK,CAACD,IAAI,CAACE,MAAM,EAAI,iBAAiB,CAAC,CACnD,IAAK,IAAG,CACN,KAAM,IAAI,CAAAD,KAAK,CAAC,uCAAuC,CAAC,CAC1D,QACE,KAAM,IAAI,CAAAA,KAAK,CAACD,IAAI,CAACE,MAAM,EAAI,8BAA8BH,MAAM,EAAE,CAAC,CAC1E,CACF,CAAC,IAAM,IAAIJ,KAAK,CAACH,OAAO,CAAE,CACxB,KAAM,IAAI,CAAAS,KAAK,CAAC,8CAA8C,CAAC,CACjE,CAAC,IAAM,CACL,KAAM,IAAI,CAAAA,KAAK,CAAC,mCAAmC,CAAC,CACtD,CACF,CACF,CAAC,CAED,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}