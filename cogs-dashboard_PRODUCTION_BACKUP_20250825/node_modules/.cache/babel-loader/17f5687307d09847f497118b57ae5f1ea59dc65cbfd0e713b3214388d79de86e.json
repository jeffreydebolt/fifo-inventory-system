{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{supabase}from'../services/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[tenantId,setTenantId]=useState(null);useEffect(()=>{// Get initial session\nconst getSession=async()=>{var _session$user;const{data:{session}}=await supabase.auth.getSession();setUser((_session$user=session===null||session===void 0?void 0:session.user)!==null&&_session$user!==void 0?_session$user:null);// For simplicity, use user email as tenant ID\nif(session!==null&&session!==void 0&&session.user){const tenant=session.user.email.split('@')[0];setTenantId(tenant);}setLoading(false);};getSession();// Listen for auth changes\nconst{data:{subscription}}=supabase.auth.onAuthStateChange(async(event,session)=>{var _session$user2;setUser((_session$user2=session===null||session===void 0?void 0:session.user)!==null&&_session$user2!==void 0?_session$user2:null);if(session!==null&&session!==void 0&&session.user){const tenant=session.user.email.split('@')[0];setTenantId(tenant);}else{setTenantId(null);}setLoading(false);});return()=>subscription.unsubscribe();},[]);const signUp=async(email,password)=>{const{data,error}=await supabase.auth.signUp({email,password});return{data,error};};const signIn=async(email,password)=>{const{data,error}=await supabase.auth.signInWithPassword({email,password});return{data,error};};const signOut=async()=>{const{error}=await supabase.auth.signOut();return{error};};const value={user,tenantId,loading,signUp,signIn,signOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","tenantId","setTenantId","getSession","_session$user","data","session","auth","tenant","email","split","subscription","onAuthStateChange","event","_session$user2","unsubscribe","signUp","password","error","signIn","signInWithPassword","signOut","value","Provider"],"sources":["/Users/jeffreydebolt/Documents/fifo/cogs-dashboard/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../services/supabase';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [tenantId, setTenantId] = useState(null);\n\n  useEffect(() => {\n    // Get initial session\n    const getSession = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      setUser(session?.user ?? null);\n      \n      // For simplicity, use user email as tenant ID\n      if (session?.user) {\n        const tenant = session.user.email.split('@')[0];\n        setTenantId(tenant);\n      }\n      \n      setLoading(false);\n    };\n\n    getSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        setUser(session?.user ?? null);\n        \n        if (session?.user) {\n          const tenant = session.user.email.split('@')[0];\n          setTenantId(tenant);\n        } else {\n          setTenantId(null);\n        }\n        \n        setLoading(false);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (email, password) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    return { data, error };\n  };\n\n  const signIn = async (email, password) => {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n    return { data, error };\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    return { error };\n  };\n\n  const value = {\n    user,\n    tenantId,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}